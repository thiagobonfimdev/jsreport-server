{"version":3,"file":"styles-xform.js","names":["Enums","require","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","CellStyleXform","MruColorsXform","DxfXform","NUMFMT_BASE","StylesXform","constructor","initialise","map","numFmts","tag","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","numFmt","font","fill","border","styleXfs","cellStyle","style","color","colors","cellStyles","tableStyles","STATIC_XFORMS","extLst","init","initIndex","index","model","numFmtNextId","styles","stylesXfs","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","weakMap","WeakMap","render","xmlStream","openXml","StdDocAttributes","openNode","STYLESHEET_ATTRIBUTES","length","forEach","numFmtXml","writeXml","closeNode","_addFont","size","theme","name","family","scheme","fontXml","fillXml","borderXml","styleXml","parseOpen","node","parser","parseText","text","parseClose","_this","undefined","add","_addFn","xform","getter","params","arguments","call","_addNumFmtStr","formatCode","_addStyleXfs","_addCellStyle","addDxfStyle","_addColor","propName","numFmtIndex","id","addStyleModel","cellType","has","get","ValueType","Number","Date","alignment","protection","styleId","set","getStyleModel","getDefaultFmtCode","addStyle","group","part","push","getDxfStyle","allowDuplicates","xml","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","parseStream","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst Enums = require('../../../doc/enums');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst FontXform = require('./font-xform');\nconst FillXform = require('./fill-xform');\nconst BorderXform = require('./border-xform');\nconst NumFmtXform = require('./numfmt-xform');\nconst StyleXform = require('./style-xform');\nconst CellStyleXform = require('./cell-style-xform');\nconst MruColorsXform = require('./mru-colors-xform');\nconst DxfXform = require('./dxf-xform');\n\n// custom numfmt ids start here\nconst NUMFMT_BASE = 164;\n\n// =============================================================================\n// StylesXform is used to generate and parse the styles.xml file\n// it manages the collections of fonts, number formats, alignments, etc\nclass StylesXform extends BaseXform {\n  constructor(initialise) {\n    super();\n\n    this.map = {\n      numFmts: new ListXform({tag: 'numFmts', count: true, childXform: new NumFmtXform()}),\n      fonts: new ListXform({\n        tag: 'fonts',\n        count: true,\n        childXform: new FontXform(),\n        $: {'x14ac:knownFonts': 1},\n      }),\n      fills: new ListXform({tag: 'fills', count: true, childXform: new FillXform()}),\n      borders: new ListXform({tag: 'borders', count: true, childXform: new BorderXform()}),\n      cellStyleXfs: new ListXform({tag: 'cellStyleXfs', count: true, childXform: new StyleXform()}),\n      cellXfs: new ListXform({\n        tag: 'cellXfs',\n        count: true,\n        childXform: new StyleXform({xfId: true}),\n      }),\n      dxfs: new ListXform({tag: 'dxfs', always: true, count: true, childXform: new DxfXform()}),\n\n      // for style manager\n      numFmt: new NumFmtXform(),\n      font: new FontXform(),\n      fill: new FillXform(),\n      border: new BorderXform(),\n      styleXfs: new StyleXform(),\n      cellStyle: new CellStyleXform(),\n      style: new StyleXform({xfId: true}),\n      color: new MruColorsXform(),\n      colors: new ListXform({tag: 'colors', childXform: new MruColorsXform()}),\n\n      cellStyles: new ListXform({tag: 'cellStyles', always: true, count: true, childXform: new CellStyleXform()}),\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\n      extLst: StylesXform.STATIC_XFORMS.extLst,\n    };\n\n    if (initialise) {\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\n      this.init();\n    }\n\n    this.initialise = initialise;\n  }\n\n  initIndex() {\n    this.index = {\n      model: {},\n      style: {},\n      styleXfs: {},\n      cellStyle: {},\n      numFmt: {},\n      numFmtNextId: 164, // start custom format ids here\n      font: {},\n      border: {},\n      fill: {},\n    };\n  }\n\n  init() {\n    // Prepare for Style Manager role\n    this.model = {\n      styles: [],\n      stylesXfs: [],\n      cellStyles: [],\n      colors: [],\n      numFmts: [],\n      fonts: [],\n      borders: [],\n      fills: [],\n      dxfs: [],\n    };\n\n    this.initIndex();\n\n    // default (zero) border\n    this._addBorder({});\n\n    // add default (all zero) style\n    this._addStyle({numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0});\n\n    // add default fills\n    this._addFill({type: 'pattern', pattern: 'none'});\n    this._addFill({type: 'pattern', pattern: 'gray125'});\n\n    this.weakMap = new WeakMap();\n  }\n\n  render(xmlStream, model) {\n    model = model || this.model;\n    //\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\n\n    if (this.index) {\n      // model has been built by style manager role (contains xml)\n      if (model.numFmts && model.numFmts.length) {\n        xmlStream.openNode('numFmts', {count: model.numFmts.length});\n        model.numFmts.forEach(numFmtXml => {\n          xmlStream.writeXml(numFmtXml);\n        });\n        xmlStream.closeNode();\n      }\n\n      if (!model.fonts.length) {\n        // default (zero) font\n        this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n      }\n      xmlStream.openNode('fonts', {count: model.fonts.length, 'x14ac:knownFonts': 1});\n      model.fonts.forEach(fontXml => {\n        xmlStream.writeXml(fontXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('fills', {count: model.fills.length});\n      model.fills.forEach(fillXml => {\n        xmlStream.writeXml(fillXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('borders', {count: model.borders.length});\n      model.borders.forEach(borderXml => {\n        xmlStream.writeXml(borderXml);\n      });\n      xmlStream.closeNode();\n\n      if (model.stylesXfs.length) {\n        xmlStream.openNode('cellStyleXfs', {count: model.stylesXfs.length});\n        model.stylesXfs.forEach(styleXfs => {\n          xmlStream.writeXml(styleXfs);\n        });\n        xmlStream.closeNode();\n      } else {\n        this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n      }\n\n      xmlStream.openNode('cellXfs', {count: model.styles.length});\n      model.styles.forEach(styleXml => {\n        xmlStream.writeXml(styleXml);\n      });\n      xmlStream.closeNode();\n    } else {\n      // model is plain JSON and needs to be xformed\n      this.map.numFmts.render(xmlStream, model.numFmts);\n      this.map.fonts.render(xmlStream, model.fonts);\n      this.map.fills.render(xmlStream, model.fills);\n      this.map.borders.render(xmlStream, model.borders);\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n      this.map.cellXfs.render(xmlStream, model.styles);\n    }\n\n    if (model.cellStyles && model.cellStyles.length) {\n      xmlStream.openNode('cellStyles', {count: model.cellStyles.length});\n      model.cellStyles.forEach(cellStyle => {\n        xmlStream.writeXml(cellStyle);\n      });\n      xmlStream.closeNode();\n    } else {\n      StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\n    }\n\n    this.map.dxfs.render(xmlStream, model.dxfs);\n\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\n\n    if (model.colors && model.colors.length) {\n      xmlStream.openNode('colors');\n      model.colors.forEach(color => {\n        xmlStream.writeXml(color);\n      });\n      xmlStream.closeNode();\n    }\n\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'styleSheet':\n        this.initIndex();\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'styleSheet': {\n        this.model = {\n          styles: [],\n          stylesXfs: [],\n          cellStyles: [],\n          colors: [],\n          numFmts: [],\n          fonts: [],\n          borders: [],\n          fills: [],\n          dxfs: [],\n        };\n\n        // index numFmts\n        this.initIndex();\n\n        // initialize is true for workbook writer\n        if (this.initialise) {\n          const add = (_addFn, xform, {getter, params = []} = {}) => {\n            if (xform.model && xform.model.length) {\n              // eslint-disable-next-line no-restricted-syntax\n              for (const model of xform.model) {\n                _addFn.call(this, ...[getter != null ? getter(model) : model], ...params);\n              }\n            }\n          };\n\n          add(this._addNumFmtStr, this.map.numFmts, {getter: model => model.formatCode, params: [true]});\n          add(this._addFont, this.map.fonts, {params: [true]});\n          add(this._addFill, this.map.fills, {params: [true]});\n          add(this._addBorder, this.map.borders, {params: [true]});\n          add(this._addStyleXfs, this.map.cellStyleXfs, {params: [true]});\n          add(this._addStyle, this.map.cellXfs, {params: [true]});\n          add(this._addCellStyle, this.map.cellStyles, {params: [true]});\n          add(this.addDxfStyle, this.map.dxfs);\n          add(this._addColor, this.map.colors);\n        } else {\n          const add = (propName, xform) => {\n            if (xform.model && xform.model.length) {\n              this.model[propName] = xform.model;\n            }\n          };\n\n          add('numFmts', this.map.numFmts);\n          add('fonts', this.map.fonts);\n          add('fills', this.map.fills);\n          add('borders', this.map.borders);\n          add('cellStyleXfs', this.map.cellStyleXfs);\n          add('styles', this.map.cellXfs);\n          add('cellStyles', this.map.cellStyles);\n          add('dxfs', this.map.dxfs);\n          add('colors', this.map.colors);\n        }\n\n        if (this.model.numFmts) {\n          const numFmtIndex = this.index.numFmt;\n          this.model.numFmts.forEach(numFmt => {\n            numFmtIndex[numFmt.id] = numFmt.formatCode;\n          });\n        }\n\n        return false;\n      }\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    if (!model) {\n      return 0;\n    }\n\n    // if we have no default font, add it here now\n    if (!this.model.fonts.length) {\n      // default (zero) font\n      this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n    }\n\n    // if we have seen this style object before, assume it has the same styleId\n    if (this.weakMap && this.weakMap.has(model)) {\n      return this.weakMap.get(model);\n    }\n\n    const style = {};\n    cellType = cellType || Enums.ValueType.Number;\n\n    if (model.numFmt) {\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\n    } else {\n      switch (cellType) {\n        case Enums.ValueType.Number:\n          style.numFmtId = this._addNumFmtStr('General');\n          break;\n        case Enums.ValueType.Date:\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (model.font) {\n      style.fontId = this._addFont(model.font);\n    }\n\n    if (model.border) {\n      style.borderId = this._addBorder(model.border);\n    }\n\n    if (model.fill) {\n      style.fillId = this._addFill(model.fill);\n    }\n\n    if (model.alignment) {\n      style.alignment = model.alignment;\n    }\n\n    if (model.protection) {\n      style.protection = model.protection;\n    }\n\n    const styleId = this._addStyle(style);\n    if (this.weakMap) {\n      this.weakMap.set(model, styleId);\n    }\n    return styleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(id) {\n    // if the style doesn't exist return null\n    const style = this.model.styles[id];\n    if (!style) return null;\n\n    // have we built this model before?\n    let model = this.index.model[id];\n    if (model) return model;\n\n    // build a new model\n    model = this.index.model[id] = {};\n\n    // -------------------------------------------------------\n    // number format\n    if (style.numFmtId) {\n      const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\n      if (numFmt) {\n        model.numFmt = numFmt;\n      }\n    }\n\n    function addStyle(name, group, styleId) {\n      if (styleId || styleId === 0) {\n        const part = group[styleId];\n        if (part) {\n          model[name] = part;\n        }\n      }\n    }\n\n    addStyle('font', this.model.fonts, style.fontId);\n    addStyle('border', this.model.borders, style.borderId);\n    addStyle('fill', this.model.fills, style.fillId);\n\n    // -------------------------------------------------------\n    // alignment\n    if (style.alignment) {\n      model.alignment = style.alignment;\n    }\n\n    // -------------------------------------------------------\n    // protection\n    if (style.protection) {\n      model.protection = style.protection;\n    }\n\n    return model;\n  }\n\n  addDxfStyle(style) {\n    if (style.numFmt) {\n      // register numFmtId to use it during dxf-xform rendering\n      style.numFmtId = this._addNumFmtStr(style.numFmt);\n    }\n\n    this.model.dxfs.push(style);\n    return this.model.dxfs.length - 1;\n  }\n\n  getDxfStyle(id) {\n    return this.model.dxfs[id];\n  }\n\n  // =========================================================================\n  // Private Interface\n  _addStyle(style, allowDuplicates) {\n    const xml = this.map.style.toXml(style);\n    let index = this.index.style[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.style[xml] = this.model.styles.length;\n      this.model.styles.push(xml);\n    }\n    return index;\n  }\n\n  _addStyleXfs(style, allowDuplicates) {\n    const xml = this.map.styleXfs.toXml(style);\n    let index = this.index.styleXfs[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.styleXfs[xml] = this.model.stylesXfs.length;\n      this.model.stylesXfs.push(xml);\n    }\n    return index;\n  }\n\n  _addCellStyle(style, allowDuplicates) {\n    const xml = this.map.cellStyle.toXml(style);\n    let index = this.index.cellStyle[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.cellStyle[xml] = this.model.cellStyles.length;\n      this.model.cellStyles.push(xml);\n    }\n    return index;\n  }\n\n  _addColor(style) {\n    const xml = this.map.color.toXml({\n      colors: style.colors,\n    });\n    this.model.colors.push(xml);\n  }\n\n  // =========================================================================\n  // Number Formats\n  _addNumFmtStr(formatCode, allowDuplicates) {\n    // check if default format\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\n    if (index !== undefined) return index;\n\n    // check if already in\n    index = this.index.numFmt[formatCode];\n    if (index !== undefined && !allowDuplicates) return index;\n\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\n    const xml = this.map.numFmt.toXml({id: index, formatCode});\n    this.model.numFmts.push(xml);\n    return index;\n  }\n\n  // =========================================================================\n  // Fonts\n  _addFont(font, allowDuplicates) {\n    const xml = this.map.font.toXml(font);\n    let index = this.index.font[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.font[xml] = this.model.fonts.length;\n      this.model.fonts.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Borders\n  _addBorder(border, allowDuplicates) {\n    const xml = this.map.border.toXml(border);\n    let index = this.index.border[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.border[xml] = this.model.borders.length;\n      this.model.borders.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Fills\n  _addFill(fill, allowDuplicates) {\n    const xml = this.map.fill.toXml(fill);\n    let index = this.index.fill[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.fill[xml] = this.model.fills.length;\n      this.model.fills.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n}\n\nStylesXform.STYLESHEET_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n  'mc:Ignorable': 'x14ac x16r2',\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n};\nStylesXform.STATIC_XFORMS = {\n  cellStyles: new StaticXform({\n    tag: 'cellStyles',\n    $: {count: 1},\n    c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}],\n  }),\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\n  tableStyles: new StaticXform({\n    tag: 'tableStyles',\n    $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'},\n  }),\n  extLst: new StaticXform({\n    tag: 'extLst',\n    c: [\n      {\n        tag: 'ext',\n        $: {\n          uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}',\n          'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\n        },\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\n      },\n      {\n        tag: 'ext',\n        $: {\n          uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}',\n          'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\n        },\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\n      },\n    ],\n  }),\n};\n\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\nclass StylesXformMock extends StylesXform {\n  constructor() {\n    super();\n\n    this.model = {\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\n      stylesXfs: [],\n      cellStyles: [],\n      colors: [],\n      numFmts: [],\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\n      borders: [{}],\n      fills: [\n        {type: 'pattern', pattern: 'none'},\n        {type: 'pattern', pattern: 'gray125'},\n      ],\n    };\n  }\n\n  // =========================================================================\n  // Style Manager Interface\n\n  // override normal behaviour - consume and dispose\n  parseStream(stream) {\n    stream.autodrain();\n    return Promise.resolve();\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    switch (cellType) {\n      case Enums.ValueType.Date:\n        return this.dateStyleId;\n      default:\n        return 0;\n    }\n  }\n\n  get dateStyleId() {\n    if (!this._dateStyleId) {\n      const dateStyle = {\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\n      };\n      this._dateStyleId = this.model.styles.length;\n      this.model.styles.push(dateStyle);\n    }\n    return this._dateStyleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(/* id */) {\n    return {};\n  }\n}\n\nStylesXform.Mock = StylesXformMock;\n\nmodule.exports = StylesXform;\n"],"mappings":"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","ignoreList":[]}