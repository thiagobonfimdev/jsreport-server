{"version":3,"file":"parse-sax.js","names":["SaxesParser","require","PassThrough","bufferToString","module","exports","_ref","_wrapAsyncGenerator","iterable","pipe","Symbol","asyncIterator","saxesParser","error","on","err","events","value","push","eventType","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","_awaitAsyncGenerator","next","done","chunk","write","return","_x","apply","arguments"],"sources":["../../../lib/utils/parse-sax.js"],"sourcesContent":["const {SaxesParser} = require('saxes');\nconst {PassThrough} = require('readable-stream');\nconst {bufferToString} = require('./browser-buffer-decode');\n\nmodule.exports = async function* (iterable) {\n  // TODO: Remove once node v8 is deprecated\n  // Detect and upgrade old streams\n  if (iterable.pipe && !iterable[Symbol.asyncIterator]) {\n    iterable = iterable.pipe(new PassThrough());\n  }\n  const saxesParser = new SaxesParser();\n  let error;\n  saxesParser.on('error', err => {\n    error = err;\n  });\n  let events = [];\n  saxesParser.on('opentag', value => events.push({eventType: 'opentag', value}));\n  saxesParser.on('text', value => events.push({eventType: 'text', value}));\n  saxesParser.on('closetag', value => events.push({eventType: 'closetag', value}));\n  for await (const chunk of iterable) {\n    saxesParser.write(bufferToString(chunk));\n    // saxesParser.write and saxesParser.on() are synchronous,\n    // so we can only reach the below line once all events have been emitted\n    if (error) throw error;\n    // As a performance optimization, we gather all events instead of passing\n    // them one by one, which would cause each event to go through the event queue\n    yield events;\n    events = [];\n  }\n};\n"],"mappings":";;;;;;;;;AAAA,MAAM;EAACA;AAAW,CAAC,GAAGC,OAAO,CAAC,OAAO,CAAC;AACtC,MAAM;EAACC;AAAW,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAM;EAACE;AAAc,CAAC,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAE3DG,MAAM,CAACC,OAAO;EAAA,IAAAC,IAAA,GAAAC,mBAAA,CAAG,WAAiBC,QAAQ,EAAE;IAC1C;IACA;IACA,IAAIA,QAAQ,CAACC,IAAI,IAAI,CAACD,QAAQ,CAACE,MAAM,CAACC,aAAa,CAAC,EAAE;MACpDH,QAAQ,GAAGA,QAAQ,CAACC,IAAI,CAAC,IAAIP,WAAW,CAAC,CAAC,CAAC;IAC7C;IACA,MAAMU,WAAW,GAAG,IAAIZ,WAAW,CAAC,CAAC;IACrC,IAAIa,KAAK;IACTD,WAAW,CAACE,EAAE,CAAC,OAAO,EAAEC,GAAG,IAAI;MAC7BF,KAAK,GAAGE,GAAG;IACb,CAAC,CAAC;IACF,IAAIC,MAAM,GAAG,EAAE;IACfJ,WAAW,CAACE,EAAE,CAAC,SAAS,EAAEG,KAAK,IAAID,MAAM,CAACE,IAAI,CAAC;MAACC,SAAS,EAAE,SAAS;MAAEF;IAAK,CAAC,CAAC,CAAC;IAC9EL,WAAW,CAACE,EAAE,CAAC,MAAM,EAAEG,KAAK,IAAID,MAAM,CAACE,IAAI,CAAC;MAACC,SAAS,EAAE,MAAM;MAAEF;IAAK,CAAC,CAAC,CAAC;IACxEL,WAAW,CAACE,EAAE,CAAC,UAAU,EAAEG,KAAK,IAAID,MAAM,CAACE,IAAI,CAAC;MAACC,SAAS,EAAE,UAAU;MAAEF;IAAK,CAAC,CAAC,CAAC;IAAC,IAAAG,yBAAA;IAAA,IAAAC,iBAAA;IAAA,IAAAC,cAAA;IAAA;MACjF,SAAAC,SAAA,GAAAC,cAAA,CAA0BhB,QAAQ,GAAAiB,KAAA,EAAAL,yBAAA,KAAAK,KAAA,SAAAC,oBAAA,CAAAH,SAAA,CAAAI,IAAA,KAAAC,IAAA,EAAAR,yBAAA,UAAE;QAAA,MAAnBS,KAAK,GAAAJ,KAAA,CAAAR,KAAA;QAAA;UACpBL,WAAW,CAACkB,KAAK,CAAC3B,cAAc,CAAC0B,KAAK,CAAC,CAAC;UACxC;UACA;UACA,IAAIhB,KAAK,EAAE,MAAMA,KAAK;UACtB;UACA;UACA,MAAMG,MAAM;UACZA,MAAM,GAAG,EAAE;QAAC;MACd;IAAC,SAAAD,GAAA;MAAAM,iBAAA;MAAAC,cAAA,GAAAP,GAAA;IAAA;MAAA;QAAA,IAAAK,yBAAA,IAAAG,SAAA,CAAAQ,MAAA;UAAA,MAAAL,oBAAA,CAAAH,SAAA,CAAAQ,MAAA;QAAA;MAAA;QAAA,IAAAV,iBAAA;UAAA,MAAAC,cAAA;QAAA;MAAA;IAAA;EACH,CAAC;EAAA,iBAAAU,EAAA;IAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;EAAA;AAAA","ignoreList":[]}