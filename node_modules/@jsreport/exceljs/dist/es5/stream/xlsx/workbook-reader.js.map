{"version":3,"file":"workbook-reader.js","names":["fs","require","EventEmitter","PassThrough","Readable","nodeStream","unzip","tmp","iterateStream","parseSax","StyleManager","WorkbookXform","RelationshipsXform","WorksheetReader","HyperlinkReader","setGracefulCleanup","WorkbookReader","constructor","input","options","arguments","length","undefined","_objectSpread","worksheets","sharedStrings","hyperlinks","styles","entries","init","_getStream","createReadStream","Error","concat","read","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","parse","_step","next","done","eventType","value","emit","err","return","error","Symbol","asyncIterator","_this","_wrapAsyncGenerator","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_awaitAsyncGenerator","_this2","stream","zip","Parse","forceStream","pipe","waitingWorkSheets","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","entry","match","sheetNo","path","_parseRels","_parseWorkbook","_asyncGeneratorDelegate","_parseSharedStrings","_parseStyles","workbookRels","_parseWorksheet","Promise","resolve","reject","file","fd","tempFileCleanupCallback","push","tempStream","createWriteStream","on","_parseHyperlinks","autodrain","fileStream","_emitEntry","payload","xform","parseStream","type","workbook","properties","map","workbookPr","model","_this3","text","richText","index","font","_iteratorAbruptCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","events","node","name","bold","charset","parseInt","attributes","color","rgb","argb","val","theme","family","italic","outline","size","underline","vertAlign","iterator","id","worksheetReader","matchingRel","find","rel","Target","matchingSheet","sheets","sheet","rId","Id","state","hyperlinksReader","Options","module","exports"],"sources":["../../../../lib/stream/xlsx/workbook-reader.js"],"sourcesContent":["const fs = require('fs');\nconst {EventEmitter} = require('events');\nconst {PassThrough, Readable} = require('readable-stream');\nconst nodeStream = require('stream');\nconst unzip = require('unzipper');\nconst tmp = require('tmp');\nconst iterateStream = require('../../utils/iterate-stream');\nconst parseSax = require('../../utils/parse-sax');\n\nconst StyleManager = require('../../xlsx/xform/style/styles-xform');\nconst WorkbookXform = require('../../xlsx/xform/book/workbook-xform');\nconst RelationshipsXform = require('../../xlsx/xform/core/relationships-xform');\n\nconst WorksheetReader = require('./worksheet-reader');\nconst HyperlinkReader = require('./hyperlink-reader');\n\ntmp.setGracefulCleanup();\n\nclass WorkbookReader extends EventEmitter {\n  constructor(input, options = {}) {\n    super();\n\n    this.input = input;\n\n    this.options = {\n      worksheets: 'emit',\n      sharedStrings: 'cache',\n      hyperlinks: 'ignore',\n      styles: 'ignore',\n      entries: 'ignore',\n      ...options,\n    };\n\n    this.styles = new StyleManager();\n    this.styles.init();\n  }\n\n  _getStream(input) {\n    if (input instanceof nodeStream.Readable || input instanceof Readable) {\n      return input;\n    }\n    if (typeof input === 'string') {\n      return fs.createReadStream(input);\n    }\n    throw new Error(`Could not recognise input: ${input}`);\n  }\n\n  async read(input, options) {\n    try {\n      for await (const {eventType, value} of this.parse(input, options)) {\n        switch (eventType) {\n          case 'shared-strings':\n            this.emit(eventType, value);\n            break;\n          case 'worksheet':\n            this.emit(eventType, value);\n            await value.read();\n            break;\n          case 'hyperlinks':\n            this.emit(eventType, value);\n            break;\n        }\n      }\n      this.emit('end');\n      this.emit('finished');\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const {eventType, value} of this.parse()) {\n      if (eventType === 'worksheet') {\n        yield value;\n      }\n    }\n  }\n\n  async *parse(input, options) {\n    if (options) this.options = options;\n    const stream = (this.stream = this._getStream(input || this.input));\n    const zip = unzip.Parse({forceStream: true});\n    stream.pipe(zip);\n\n    // worksheets, deferred for parsing after shared strings reading\n    const waitingWorkSheets = [];\n\n    for await (const entry of iterateStream(zip)) {\n      let match;\n      let sheetNo;\n      switch (entry.path) {\n        case '_rels/.rels':\n          break;\n        case 'xl/_rels/workbook.xml.rels':\n          await this._parseRels(entry);\n          break;\n        case 'xl/workbook.xml':\n          await this._parseWorkbook(entry);\n          break;\n        case 'xl/sharedStrings.xml':\n          yield* this._parseSharedStrings(entry);\n          break;\n        case 'xl/styles.xml':\n          await this._parseStyles(entry);\n          break;\n        default:\n          if (entry.path.match(/xl\\/worksheets\\/sheet\\d+[.]xml/)) {\n            match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n            sheetNo = match[1];\n            if (this.sharedStrings && this.workbookRels) {\n              yield* this._parseWorksheet(iterateStream(entry), sheetNo);\n            } else {\n              // create temp file for each worksheet\n              await new Promise((resolve, reject) => {\n                tmp.file((err, path, fd, tempFileCleanupCallback) => {\n                  if (err) {\n                    return reject(err);\n                  }\n                  waitingWorkSheets.push({sheetNo, path, tempFileCleanupCallback});\n\n                  const tempStream = fs.createWriteStream(path);\n                  tempStream.on('error', reject);\n                  entry.pipe(tempStream);\n                  return tempStream.on('finish', () => {\n                    return resolve();\n                  });\n                });\n              });\n            }\n          } else if (entry.path.match(/xl\\/worksheets\\/_rels\\/sheet\\d+[.]xml.rels/)) {\n            match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n            sheetNo = match[1];\n            yield* this._parseHyperlinks(iterateStream(entry), sheetNo);\n          }\n          break;\n      }\n      entry.autodrain();\n    }\n\n    for (const {sheetNo, path, tempFileCleanupCallback} of waitingWorkSheets) {\n      let fileStream = fs.createReadStream(path);\n      // TODO: Remove once node v8 is deprecated\n      // Detect and upgrade old fileStreams\n      if (!fileStream[Symbol.asyncIterator]) {\n        fileStream = fileStream.pipe(new PassThrough());\n      }\n      yield* this._parseWorksheet(fileStream, sheetNo);\n      tempFileCleanupCallback();\n    }\n  }\n\n  _emitEntry(payload) {\n    if (this.options.entries === 'emit') {\n      this.emit('entry', payload);\n    }\n  }\n\n  async _parseRels(entry) {\n    const xform = new RelationshipsXform();\n    this.workbookRels = await xform.parseStream(iterateStream(entry));\n  }\n\n  async _parseWorkbook(entry) {\n    this._emitEntry({type: 'workbook'});\n\n    const workbook = new WorkbookXform();\n    await workbook.parseStream(iterateStream(entry));\n\n    this.properties = workbook.map.workbookPr;\n    this.model = workbook.model;\n  }\n\n  async *_parseSharedStrings(entry) {\n    this._emitEntry({type: 'shared-strings'});\n    switch (this.options.sharedStrings) {\n      case 'cache':\n        this.sharedStrings = [];\n        break;\n      case 'emit':\n        break;\n      default:\n        return;\n    }\n\n    let text = null;\n    let richText = [];\n    let index = 0;\n    let font = null;\n    for await (const events of parseSax(iterateStream(entry))) {\n      for (const {eventType, value} of events) {\n        if (eventType === 'opentag') {\n          const node = value;\n          switch (node.name) {\n            case 'b':\n              font = font || {};\n              font.bold = true;\n              break;\n            case 'charset':\n              font = font || {};\n              font.charset = parseInt(node.attributes.charset, 10);\n              break;\n            case 'color':\n              font = font || {};\n              font.color = {};\n              if (node.attributes.rgb) {\n                font.color.argb = node.attributes.argb;\n              }\n              if (node.attributes.val) {\n                font.color.argb = node.attributes.val;\n              }\n              if (node.attributes.theme) {\n                font.color.theme = node.attributes.theme;\n              }\n              break;\n            case 'family':\n              font = font || {};\n              font.family = parseInt(node.attributes.val, 10);\n              break;\n            case 'i':\n              font = font || {};\n              font.italic = true;\n              break;\n            case 'outline':\n              font = font || {};\n              font.outline = true;\n              break;\n            case 'rFont':\n              font = font || {};\n              font.name = node.value;\n              break;\n            case 'si':\n              font = null;\n              richText = [];\n              text = null;\n              break;\n            case 'sz':\n              font = font || {};\n              font.size = parseInt(node.attributes.val, 10);\n              break;\n            case 'strike':\n              break;\n            case 't':\n              text = null;\n              break;\n            case 'u':\n              font = font || {};\n              font.underline = true;\n              break;\n            case 'vertAlign':\n              font = font || {};\n              font.vertAlign = node.attributes.val;\n              break;\n          }\n        } else if (eventType === 'text') {\n          text = text ? text + value : value;\n        } else if (eventType === 'closetag') {\n          const node = value;\n          switch (node.name) {\n            case 'r':\n              richText.push({\n                font,\n                text,\n              });\n\n              font = null;\n              text = null;\n              break;\n            case 'si':\n              if (this.options.sharedStrings === 'cache') {\n                this.sharedStrings.push(richText.length ? {richText} : text);\n              } else if (this.options.sharedStrings === 'emit') {\n                yield {index: index++, text: richText.length ? {richText} : text};\n              }\n\n              richText = [];\n              font = null;\n              text = null;\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  async _parseStyles(entry) {\n    this._emitEntry({type: 'styles'});\n    if (this.options.styles === 'cache') {\n      this.styles = new StyleManager();\n      await this.styles.parseStream(iterateStream(entry));\n    }\n  }\n\n  *_parseWorksheet(iterator, sheetNo) {\n    this._emitEntry({type: 'worksheet', id: sheetNo});\n    const worksheetReader = new WorksheetReader({\n      workbook: this,\n      id: sheetNo,\n      iterator,\n      options: this.options,\n    });\n\n    const matchingRel = (this.workbookRels || []).find(rel => rel.Target === `worksheets/sheet${sheetNo}.xml`);\n    const matchingSheet = matchingRel && (this.model.sheets || []).find(sheet => sheet.rId === matchingRel.Id);\n    if (matchingSheet) {\n      worksheetReader.id = matchingSheet.id;\n      worksheetReader.name = matchingSheet.name;\n      worksheetReader.state = matchingSheet.state;\n    }\n    if (this.options.worksheets === 'emit') {\n      yield {eventType: 'worksheet', value: worksheetReader};\n    }\n  }\n\n  *_parseHyperlinks(iterator, sheetNo) {\n    this._emitEntry({type: 'hyperlinks', id: sheetNo});\n    const hyperlinksReader = new HyperlinkReader({\n      workbook: this,\n      id: sheetNo,\n      iterator,\n      options: this.options,\n    });\n    if (this.options.hyperlinks === 'emit') {\n      yield {eventType: 'hyperlinks', value: hyperlinksReader};\n    }\n  }\n}\n\n// for reference - these are the valid values for options\nWorkbookReader.Options = {\n  worksheets: ['emit', 'ignore'],\n  sharedStrings: ['cache', 'emit', 'ignore'],\n  hyperlinks: ['cache', 'emit', 'ignore'],\n  styles: ['cache', 'ignore'],\n  entries: ['emit', 'ignore'],\n};\n\nmodule.exports = WorkbookReader;\n"],"mappings":"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","ignoreList":[]}